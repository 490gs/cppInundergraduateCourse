#version 420 core
layout(triangles)in;
layout(line_strip,max_vertices=6)out;

in VS_OUT{
	vec3 normal;
}gs_in[];

const float MAGNITUDE=0.1;
void GenerateLine(int index)
{
	gl_Position=gl_in[index].gl_Position;
	EmitVertex();
	gl_Position=gl_in[index].gl_Position+vec4(gs_in[index].normal,0.0)*MAGNITUDE;
	EmitVertex();
	EndPrimitive();
}

void main()
{
	GenerateLine(0);
	GenerateLine(1);
	GenerateLine(2);
}




/*in VS_OUT{
	vec2 texCoords;
}gs_in[];

out vec2 TexCoords;

uniform float time;

vec4 explode(vec4 position,vec3 normal)
{
	float magnitude=2.0;
	vec3 direction=normal*((sin(time)+1.0)/2.0)*magnitude;
	return position+vec4(direction,0.0);
}
vec3 GetNormal()
{
	vec3 a=vec3(gl_in[0].gl_Position)-vec3(gl_in[1].gl_Position);
	vec3 b=vec3(gl_in[2].gl_Position)-vec3(gl_in[1].gl_Position);
	return normalize(cross(a,b));
}
void main()
{
	vec3 normal=GetNormal();

	gl_Position=explode(gl_in[0].gl_Position,normal);
	TexCoords=gs_in[0].texCoords;
	EmitVertex();
	gl_Position=explode(gl_in[1].gl_Position,normal);
	TexCoords=gs_in[1].texCoords;
	EmitVertex();
	gl_Position=explode(gl_in[2].gl_Position,normal);
	TexCoords=gs_in[2].texCoords;
	EmitVertex();
	EndPrimitive();
}*/



/*layout(points)in;
layout(triangle_strip,max_vertices=5)out;
in VS_OUT{
	vec3 color;
}gs_in[];
out vec3 fColor;
void build_house(vec4 position)
{
	fColor=gs_in[0].color;
	gl_Position=position+vec4(-0.2,-0.2,0.0,0.0);
	EmitVertex();
	gl_Position=position+vec4(0.2,-0.2,0.0,0.0);
	EmitVertex();
	gl_Position=position+vec4(-0.2,0.2,0.0,0.0);
	EmitVertex();
	gl_Position=position+vec4(0.2,0.2,0.0,0.0);
	EmitVertex();
	gl_Position=position+vec4(0.0,0.4,0.0,0.0);
	fColor=vec3(1.0,1.0,1.0);
	EmitVertex();
	EndPrimitive();
}
void main()
{
	build_house(gl_in[0].gl_Position);
}//*/
//传递几何着色器；Pass-through；
/*layout(points)in;
layout(points,max_vertices=1)out;

void main()
{
	gl_Position=gl_in[0].gl_Position;
	EmitVertex();
	EndPrimitive();
}//*/
/*layout(points) in;
layout(line_strip,max_vertices=3) out;

void main()
{
	gl_Position=gl_in[0].gl_Position+vec4(-0.1,0.0,0.0,0.0);
	EmitVertex();

	gl_Position=gl_in[0].gl_Position+vec4(0.0,0.7,0.0,0.0);
	EmitVertex();

	gl_Position=gl_in[0].gl_Position+vec4(0.1,0.0,0.0,0.0);
	EmitVertex();

	EndPrimitive();
}//*/