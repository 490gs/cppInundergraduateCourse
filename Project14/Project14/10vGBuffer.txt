#version 330 core
layout(location=0)in vec3 position;
layout(location=1)in vec3 normal;
layout(location=2)in vec2 texCoords;

out vec3 FragPos;
out vec2 TexCoords;
out vec3 Normal;

layout(std140)uniform Matrices{
	mat4 projection;
	mat4 view;
};
uniform bool invertedNormal;
uniform mat4 model;

void main()
{
	/*vec4 worldPos=model*vec4(position,1.0);
	FragPos=worldPos.xyz;
	gl_Position=projection*view*worldPos;
	TexCoords=texCoords;

	mat3 normalMatrix=transpose(inverse(mat3(model)));
	Normal=normalMatrix*normal;*/

	vec4 viewPos=view*model*vec4(position,1.0);
	FragPos=viewPos.xyz;
	TexCoords=texCoords;

	mat3 normalMatrix=transpose(inverse(mat3(view*model)));
	Normal=normalMatrix*(invertedNormal?-normal:normal);

	gl_Position=projection*viewPos;
}
